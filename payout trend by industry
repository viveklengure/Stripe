import pandas as pd
import matplotlib.pyplot as plt
from pandasql import sqldf

# Load datasets
countries = pd.read_csv('countries.csv')
industries = pd.read_csv('industries.csv')
payouts = pd.read_csv('payouts.csv')

# SQL query
aggregated_data_sql = """
SELECT 
    substr(p.date, 1, 4) as year, 
    substr(p.date, 1, 7) as month, 
    substr(p.date, 1, 10) as date,  
    p.platform_id, 
    p.recipient_id, 
    p.count, 
    p.amount, 
    ROUND(p.amount / 100, 4) as amount_USD, 
    c.country as country_platform, 
    c1.country as country_recipient,
    i.industry
FROM payouts p
JOIN countries c ON p.platform_id = c.merchant_id
JOIN countries c1 ON p.recipient_id = c1.merchant_id
JOIN industries i ON p.platform_id = i.merchant_id
ORDER BY c.country, substr(p.date, 1, 10)
"""
# NOTE: SQLite doesn't support right join but in an ideal scenario, Right join should be used when joining with countries and industries datasets

# Execute the query using pysqldf function
aggregated_data = sqldf(aggregated_data_sql)
aggregated_data.dropna(inplace=True)

# Exporting aggregating into a csv file
aggregated_data.to_csv('aggregated_data_country_industry.csv')

payouts_df = pd.read_csv('aggregated_data_country_industry.csv')
payouts_df['date'] = pd.to_datetime(payouts_df['date'])

# Aggregate payouts by industry and date
payouts_by_industry_date = payouts_df.groupby(['industry', 'date']).sum()['amount'].reset_index()

# Create a separate plot for each industry
industries = payouts_by_industry_date['industry'].unique()

# Plot for each industry
for industry in industries:
    data_industry = payouts_by_industry_date[payouts_by_industry_date['industry'] == industry]
    plt.plot(data_industry['date'], data_industry['amount'], label=industry)
    # Add labels and legend
    plt.xlabel('Date')
    plt.ylabel('Amount')
    plt.title('Amount vs. Industry Over Time')
    plt.legend()
    plt.show()
